{"version":3,"sources":["Components/HomeView.jsx","Utils/store.js","Utils/time.js","Utils/index.js","Components/ShoppingListView.jsx","Components/AddShoppingList.jsx","Components/UpdateShoppingList.jsx","Components/ShoppingListDetails.jsx","Components/AddItemToList.jsx","App.jsx","serviceWorker.js","index.js"],"names":["HomeView","className","src","alt","onClick","props","toggleModal","Component","db","Dexie","version","stores","shopaperData","open","key","data","console","log","transaction","update","then","updated","add","catch","err","stack","a","async","get","res","error","alert","where","equals","delete","deleteCount","time","timestamp","dateObj","Date","date","getDate","month","getMonth","year","getFullYear","day","getDay","dateWithOrdinal","d","nth","hours","getHours","minutes","getMinutes","ampm","getTime","utils","add_new","dbMethods","fetchData","deleteTable","ShoppingListView","editItem","item","deleteItem","index","ele","document","getElementById","state","setTimeout","replace","getData","prevProps","this","setState","style","marginTop","Object","keys","map","e","viewShoppingList","marginBottom","dateCreate","id","class","AddShoppingList","addShoppingList","shoppingListName","loading","items","empty","target","width","type","value","placeholder","onChange","UpdateShoppingList","shopping","prevListName","listName","ShoppingListDetails","shoppingListData","splice","parentNode","toggleItemStatus","animateBack","nameText","deleteBack","deleteText","status","temp","name","push","margin","color","checked","AddItemToList","currentShoppingList","App","modalType","updateShoppingListName","modal","showStatus","show","updateShoppingList","addItemToList","length","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c06d229.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class HomeView extends Component {\n    render() {\n        return (\n            <>\n                <div className=\"homeView\">\n                    <img className=\"home-logo\" src={process.env.PUBLIC_URL + 'logo192.png'} alt=\"Logo\"/>\n                    <h1>Welcome! to Shopaper.</h1>\n                    <button className=\"ui black button\" onClick={()=> this.props.toggleModal('addShoppingList')}>Create Shoping List</button>\n                </div>\n            </>\n        )\n    }\n}\n","import Dexie from 'dexie'\n// Declare db instance\nvar db = new Dexie(\"Shopaper\");\n\n// Define Database Schema\ndb.version(1).stores({\n    shopaperData: \"key, data\"\n});\n\n// Open Database\ndb.open(); \n\nlet add_new = (key, data) => {\n    console.log(data)\n    db.transaction('rw', db.shopaperData, function () {\n        db.shopaperData.update(key, { ...data}).then(updated => {\n            if (!updated) {\n                db.shopaperData.add({key, ...data});\n            }\n        })\n    }).catch(function(err) {\n        console.log(err.stack || err);\n    });    \n}\n\nlet fetchData = async (key) => {\n    let data = {}\n    await db.shopaperData.get(key).then(res => {\n        data = {...res}\n    }).catch(error => {\n        alert (\"Ooops: \" + error);\n    });\n    return data\n}\n\nlet deleteTable = (key) => {\n    db.shopaperData.where('key').equals(key).delete()\n    .then(function (deleteCount) {\n        console.log( \"Deleted \" + deleteCount + \" objects\");\n        return true\n    });\n}\nexport default { add_new, fetchData, deleteTable }","const getTime = (dateObj) => {\n    let hours = dateObj.getHours();\n    let minutes = dateObj.getMinutes();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; \n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    var strTime = `${hours}:${minutes} ${ampm}`;\n\n    return strTime;\n}\n\nconst nth = (d) => {\n    if (d > 3 && d < 21) return 'th'; \n    switch (d % 10) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n    }\n}\n\nconst getDate = (dateObj) => {\n    let date = dateObj.getDate()\n    let month = [\"Jan\",\"Feb\",\"Mar\",\"April\",\"May\",\"June\",\"July\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"][dateObj.getMonth()]\n    let year = dateObj.getFullYear()\n    let day = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'][dateObj.getDay()]\n\n    let dateWithOrdinal = `${date}${nth(date)}`\n\n    let strDate = `${day}, ${dateWithOrdinal} ${month} ${year}`\n\n    return strDate\n}\n\n\nconst time = (timestamp) => {\n    let dateObj = new Date(timestamp)\n    return `${getDate(dateObj)} - ${getTime(dateObj)}`\n}\n\nexport default time","import dbMethods from './store' // To store data on indexDB\nimport time from './time'\n\nlet utils = {}\n\nutils.add_new = dbMethods.add_new\nutils.fetchData = dbMethods.fetchData\nutils.deleteTable = dbMethods.deleteTable\nutils.time = time\n\nexport default utils","import React, { Component } from 'react'\nimport utils from './../Utils'\nexport default class ShoppingListView extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: this.props.data\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.setState({\n                data: this.props.data\n            })\n        }\n    }\n\n    editItem = (item) => {\n        this.props.toggleModal('updateShoppingList', item)\n    }\n    deleteItem = (item, index) => {\n        let ele = document.getElementById(`delete_shop_list-${index}`)\n        ele.className = ele.className + ' loading disabled'\n        let data = this.state.data\n        delete data[item]\n        utils.deleteTable('key')\n        utils.add_new('key', {\n            ...data,\n        })\n        setTimeout(()=> {\n            ele.className = ele.className.replace(' loading disabled', '')\n            this.props.getData()\n        }, 1000)\n    }\n    render() {\n        return (\n            <>\n                <div className=\"shoppingListView\">\n                    <div className=\"head\">\n                        <img src={process.env.PUBLIC_URL+'logo64.png'} alt=\"Logo\"/>\n                        <button className=\"ui black button\" onClick={()=> this.props.toggleModal('addShoppingList')}>Create Shoping List</button>\n                    </div>\n                    <div style={{marginTop: '40px'}} className=\"body-content\">\n                        {\n                            Object.keys(this.state.data).map((item, index) => {\n                                return (\n                                    <div className=\"shoppingList pointer\">\n                                        <div className=\"left-details\" onClick={(e)=> this.props.viewShoppingList(true, item,this.state.data[item])}>\n                                            <div className=\"serial-no\">\n                                                {index + 1}.\n                                            </div>\n                                            <div className=\"name-date-shop-list\">\n                                                <p style={{marginBottom: '0px'}}>{item}</p>\n                                                <span>{utils.time(this.props.data[item].dateCreate)}</span>\n                                            </div>\n                                        </div>\n                                        <div className=\"right-actions\">\n                                            <button id={`add_shop_list-${index}`} onClick={()=>this.props.toggleModal('addItemToList', item)} class=\"ui primary compact icon button\">\n                                                <i class=\"plus icon\"></i>\n                                            </button>\n                                            <button id={`edit_shop_list-${index}`} onClick={() => this.editItem(item, index)} class=\"ui primary compact icon button\">\n                                                <i class=\"pencil alternate icon\"></i>\n                                            </button>\n                                            <button id={`delete_shop_list-${index}`} onClick={() => this.deleteItem(item, index)} class=\"ui primary compact icon button\">\n                                                <i class=\"trash alternate icon\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport utils from './../Utils/'\nexport default class AddShoppingList extends Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            shoppingListName: '',\n            empty: false,\n            loading: false\n        }\n    }\n    // item to shopping list in index db\n    addShoppingList = () => {\n        if (this.state.shoppingListName) {\n            this.setState({\n                loading: true\n            })\n            utils.add_new('key', {\n                [this.state.shoppingListName]: {\n                    dateCreate: new Date().getTime(),\n                    items: []\n                }\n            })\n            setTimeout(()=> {\n                this.props.toggleModal('addShoppingList') \n                this.props.getData()\n            }, 1000)\n        }else{\n            this.setState({\n                empty: true\n            })\n        }\n    }\n    render() {\n        return (\n            <>\n                <div id=\"addShoppingList-modal\" className=\"modal\" onClick={(e)=> (e.target.id === 'addShoppingList-modal')?this.props.toggleModal('addShoppingList'): null}>\n                    <div className=\"container\">\n                        <h4>Create your shopping list</h4>\n                        <div style={{width: '100%'}} class={`ui left icon ${(this.state.empty)?'error':''} input`}>\n                            <input type=\"text\" className=\"custom-input\" value={this.state.shoppingListName} placeholder=\"Enter shopping list name\" onChange={(e) => this.setState({shoppingListName: e.target.value})}/>\n                            <i class=\"shopping bag icon\"></i>\n                        </div>\n                        <div className=\"footer-button\">\n                            <button class=\"ui button\" onClick={()=> this.props.toggleModal('addShoppingList')}>\n                                Close\n                            </button>\n                            <button class={`ui primary button ${(this.state.loading)?'loading disabled': ''}`} onClick={() => this.addShoppingList()}>\n                                Create \n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport utils from '../Utils'\nexport default class UpdateShoppingList extends Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            shoppingListName: this.props.listName,\n            empty: false,\n            loading: false,\n            prevListName: this.props.listName,\n        }\n    }\n    // item to shopping list in index db\n    addShoppingList = () => {\n        if (this.state.shoppingListName) {\n            this.setState({\n                loading: true\n            })\n            let shopping = this.props.data[this.state.prevListName]\n            delete this.props.data[this.state.prevListName]\n            utils.deleteTable('key')\n            utils.add_new('key', {\n                ...this.props.data,\n                [this.state.shoppingListName]: shopping\n            })\n            setTimeout(()=> {\n                this.props.toggleModal('updateShoppingList') \n                this.props.getData()\n            }, 1000)\n        }else{\n            this.setState({\n                empty: true\n            })\n        }\n    }\n    render() {\n        return (\n            <>\n                <div id=\"updateShoppingList-modal\" className=\"modal\" onClick={(e)=> (e.target.id === 'updateShoppingList-modal')?this.props.toggleModal('updateShoppingList'): null}>\n                    <div className=\"container\">\n                        <h4>Update shopping list</h4>\n                        <div style={{width: '100%'}} class={`ui left icon ${(this.state.empty)?'error':''} input`}>\n                            <input type=\"text\" className=\"custom-input\" value={this.state.shoppingListName} placeholder=\"Update shopping list name\" onChange={(e) => this.setState({shoppingListName: e.target.value})}/>\n                            <i class=\"shopping bag icon\"></i>\n                        </div>\n                        <div className=\"footer-button\">\n                            <button class=\"ui button\" onClick={()=> this.props.toggleModal('updateShoppingList')}>\n                                Close\n                            </button>\n                            <button class={`ui primary button ${(this.state.loading)?'loading disabled': ''}`} onClick={() => this.addShoppingList()}>\n                                Update \n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport utils from '../Utils'\nexport default class ShoppingListDetails extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: this.props.data,\n            shoppingListData: this.props.shoppingListData\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.setState({\n                data: this.props.data\n            })\n        }\n    }\n\n    editItem = (item) => {\n        this.props.toggleModal('updateShoppingList', item)\n    }\n    deleteItem = (item, index) => {\n        let ele = document.getElementById(`delete_shop_list-${index}`)\n        ele.className = ele.className + ' loading disabled'\n        let data = this.state.data\n        data[this.state.shoppingListData.item].items.splice(index, 1)\n        delete ele.parentNode.parentNode\n\n        utils.add_new('key', {\n            ...data,\n        })\n        setTimeout(()=> {\n            ele.className = ele.className.replace(' loading disabled', '')\n            this.props.getData()\n        }, 1000)\n    }\n    toggleItemStatus = (item, index) => {\n        let animateBack = document.getElementById('animatable'+index)\n        let nameText = document.getElementById('strikeName'+index)\n        let deleteBack = document.getElementById('delete_shop_list-'+index)\n        let deleteText = document.getElementById('changeColor'+index)\n        let input = document.getElementById('input'+index)\n        if (!item.status) {\n            let data = this.state.data\n            let temp = []\n            data[this.state.shoppingListData.item].items.map((ele) =>{\n                if (ele.name === item.name) {\n                    temp.push({\n                        name: item.name,\n                        status: true\n                    })\n                } else {\n                    temp.push(ele)\n                }\n            })\n            data[this.state.shoppingListData.item].items = temp\n            utils.add_new('key', {\n                ...data,\n            })\n            setTimeout(()=> {\n                this.props.getData()\n                animateBack.className = animateBack.className+' full-width'\n                nameText.className = nameText.className+' whiteColor strike'\n                deleteBack.className = deleteBack.className+' whiteBG'\n                deleteText.className = deleteText.className+' primaryColor'\n            }, 1000)\n        } else {\n            let data = this.state.data\n            let temp = []\n            data[this.state.shoppingListData.item].items.map((ele) =>{\n                if (ele.name === item.name) {\n                    temp.push({\n                        name: item.name,\n                        status: false\n                    })\n                } else {\n                    temp.push(ele)\n                }\n            })\n            data[this.state.shoppingListData.item].items = temp\n            utils.add_new('key', {\n                ...data,\n            })\n            setTimeout(()=> {\n                this.props.getData()\n                animateBack.className = animateBack.className.replace(' full-width', '')\n                nameText.className = nameText.className.replace(' whiteColor strike', '')\n                deleteBack.className = deleteBack.className.replace(' whiteBG', '')\n                deleteText.className = deleteText.className.replace(' primaryColor', '')\n            }, 1000)\n        }\n    }\n    render() {\n        return (\n            <>\n                <div className=\"shoppingListView\">\n                    <div className=\"head\">\n                        <img src={process.env.PUBLIC_URL+'logo64.png'} alt=\"Logo\"/>\n                        <h2 style={{margin: '0px'}} className=\"pointer\" onClick={() => this.props.viewShoppingList(false, null, {})}><i class=\"times icon\"></i></h2>\n                    </div>\n                    <div style={{marginTop: '40px'}} className=\"body-content\">\n                        <div className=\"header-button\" style={{marginBottom: '25px'}}>\n                            <h3 style={{margin: '0px', color: 'rgba(14, 92, 34, 100%)'}}>{this.state.shoppingListData.item}</h3>\n                            <button className=\"ui basic button primary\" onClick={()=>this.props.toggleModal('addItemToList', this.state.shoppingListData.item)}>Add Item</button>\n                        </div>\n                        {\n                            this.state.data[this.state.shoppingListData.item].items.map((item, index) => {\n                                return (\n                                    <div key={index} className=\"shoppingList pointer\">\n                                        <div id={\"animatable\"+index} className={`animatable-back ${(item.status)?' full-width':''}`}></div>\n                                        <div className=\"left-details\">\n                                            <div className=\"serial-no\">\n                                                <div class=\"ui primary fitted checkbox\">\n                                                    <input type=\"checkbox\" id={\"input\"+index} checked={item.status} onChange={(e)=> this.toggleItemStatus(item, index, e)}/>\n                                                    <label></label>\n                                                </div>\n                                            </div>\n                                            <div className=\"name-date-shop-list\">\n                                                <p style={{marginBottom: '0px'}} className={`${(item.status)?' whiteColor strike':''}`} id={\"strikeName\"+index}>{item.name}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"right-actions\">\n                                            <button id={`delete_shop_list-${index}`} onClick={() => this.deleteItem(item, index)} className={`ui primary compact icon button ${(item.status)?' whiteBG':''}`}>\n                                                <i id={\"changeColor\"+index} className={`trash alternate icon ${(item.status)?' primaryColor':''}`}></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport utils from '../Utils'\nexport default class AddItemToList extends Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            shoppingListName: '',\n            empty: false,\n            loading: false,\n            currentShoppingList: this.props.currentShoppingList\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.setState({\n                data: this.props.data\n            })\n        }\n    }\n    // item to shopping list in index db\n    addShoppingList = () => {\n        if (this.state.shoppingListName) {\n            this.setState({\n                loading: true\n            })\n            let shopping = this.props.data[this.props.currentShoppingList]\n            shopping.items = [\n                ...shopping.items,\n                {\n                    name: this.state.shoppingListName,\n                    status: false\n                }\n            ]\n            utils.add_new('key', {\n                ...this.props.data,\n                [this.state.currentShoppingList]: shopping\n            })\n            setTimeout(()=> {\n                this.props.toggleModal('addItemToList') \n                this.props.getData()\n            }, 1000)\n        }else{\n            this.setState({\n                empty: true\n            })\n        }\n    }\n    render() {\n        return (\n            <>\n                <div id=\"addShoppingList-modal\" className=\"modal\" onClick={(e)=> (e.target.id === 'addShoppingList-modal')?this.props.toggleModal('addItemToList'): null}>\n                    <div className=\"container\">\n                        <h4>Add items to shopping this list</h4>\n                        {/* <div style={{marginBottom: '10px'}} className=\"over-flow\">\n                            <button class=\"circular mini ui primary icon button\">\n                                Hello World 123\n                            </button>\n                        </div> */}\n                        <div style={{width: '100%'}} class={`ui left icon ${(this.state.empty)?'error':''} input`}>\n                            <input type=\"text\" className=\"custom-input\" value={this.state.shoppingListName} placeholder=\"Enter items name\" onChange={(e) => this.setState({shoppingListName: e.target.value})}/>\n                            <i class=\"shopping bag icon\"></i>\n                        </div>\n                        <div className=\"footer-button\">\n                            <button class=\"ui button\" onClick={()=> this.props.toggleModal('addItemToList')}>\n                                Close\n                            </button>\n                            <button class={`ui primary button ${(this.state.loading)?'loading disabled': ''}`} onClick={() => this.addShoppingList()}>\n                                Add to list\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport HomeView from './Components/HomeView'\nimport ShoppingListView from './Components/ShoppingListView'\nimport AddShoppingList from './Components/AddShoppingList'\nimport UpdateShoppingList from './Components/UpdateShoppingList'\nimport ShoppingListDetails from './Components/ShoppingListDetails'\nimport AddItemToList from './Components/AddItemToList'\nimport utils from './Utils/'\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modal: {\n        addShoppingList: false,\n        updateShoppingList: false,\n        addItemToList: false,\n      },\n      updateShoppingListName: '',\n      currentShoppingList: '',\n      data: null,\n      viewShoppingList: {\n        show: false,\n        data: {},\n        item: null\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  // toggle all modals\n  toggleModal = (modalType, data) => {\n    if (modalType === 'updateShoppingList') {\n      if (data) {\n        this.setState({\n          updateShoppingListName: data,\n        })\n      }\n    }\n    if (modalType === 'addItemToList') {\n      if (data) {\n        this.setState({\n          currentShoppingList: data,\n        })\n      }\n    }\n    this.setState({\n      modal: {\n        ...this.state.modal,\n        [modalType]: !this.state.modal[modalType]\n      }\n    })\n  }\n\n  // get data from index db \n  getData = () => {\n    utils.fetchData('key')\n    .then(res => {\n      delete res['key']\n      this.setState({\n        data: res\n      })\n    })\n  }\n\n  viewShoppingList = (showStatus, item, data) => {\n    this.setState({\n      viewShoppingList: {\n        show: showStatus,\n        data,\n        item\n      }\n    })\n  }\n  render() {\n    return (\n      <>\n        {\n          (!this.state.data)\n            ? <></>\n            : (!(Object.keys(this.state.data).length > 0))\n              ? <HomeView toggleModal={this.toggleModal}/>\n              : (this.state.viewShoppingList.show)\n                  ? <ShoppingListDetails data={this.state.data} getData={this.getData} toggleModal={this.toggleModal} shoppingListData={this.state.viewShoppingList} viewShoppingList={this.viewShoppingList}/>\n                  : <ShoppingListView data={this.state.data} viewShoppingList={this.viewShoppingList} getData={this.getData} toggleModal={this.toggleModal}/>\n        }\n        {\n          (this.state.modal.addShoppingList)\n            ? <AddShoppingList toggleModal={this.toggleModal} getData={this.getData}/>\n            : <></>\n        }\n        {\n          (this.state.modal.updateShoppingList)\n            ? <UpdateShoppingList data={this.state.data} listName={this.state.updateShoppingListName} toggleModal={this.toggleModal} getData={this.getData}/>\n            : <></>\n        }\n        {\n          (this.state.modal.addItemToList)\n            ? <AddItemToList toggleModal={this.toggleModal} currentShoppingList={this.state.currentShoppingList} data={this.state.data} getData={this.getData}/>\n            : <></>\n        }\n      </>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}